#include "AddGenieEventsToArt.fcl"
#include "services_microboone.fcl"

process_name:  DumpGenieInfo

services:
{
  RandomNumberGenerator: {} #ART native random number generator
  scheduler: { }
}


# Read from an existing file
source:
{
  module_type: RootInput
  maxEvents:   -1
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

  producers:
  {
    # when fetched from file by dump module they'll come back
    # ordered alphabetically by label, so for convenience put
    # them in in that order (easing comparisons)
  }

  analyzers:
  {
    outputgenie: {
      module_type:           GenieOutput          # name of modules
      inputModuleLabels:     [ ]                  # list of input module labels
      outputGHEPFile:        "gntp.ghep.root"     # genie::EventRecord file name
      dumpFilePattern:       "std::cout"          # genie record dump
      dumpGeniePrintLevel:   -1                   # 13 is a good choice, -1=off
      dumpMCTruth:           false                # dump main MCTruth
      dumpGTruth:            false                # print assoc GTruth (if avail)
      dumpMCFlux:            false                # print assoc MCFlux (if avail)
    }
  }

  simulate: [ ]
  stream1:  [ outputgenie ]

  trigger_paths:   [ ]
  end_paths:       [ stream1 ]

}

outputs:
{
}
